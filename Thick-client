=====================Thick client pentesting=========================

Thick client: A Thick/Heavy/Rich client is a computer client in client server architecture or network,that typically provides rich functionality indpendent of the central server.

Thick client applications can be developed using various programming languages such as:

	1. .Net
	2. java
	3. C/C++
	4. Microsoft silverlight

Architecture:

1.Two tier 

	Thick client directly communicates directly with database by database drivers like jdbc,odbc.

2.Three tier.

	Thick client----------------->application server------------------>database.
			 http/https	

Pentesting Thick client Applications:

	*discover tech being used on both client and server side.
	*get hands on for all the functions and behavior.
	*understand security mechanisms used by the application.
	*identify common vulnerabilities like languages and frameworks.

Types:

	1.Static.
	2.Dynamic.
	3.Reverse Engineering.
	4.Automated Security Audits.

1.Static:

	1.insecure Local store.
	2.Hardcoded sensitive information.
	3.weak code quality.
	4.weak configuration management.
	5.insecure logging.

2.Dymanic:

	1.injection.
	2.unencrypted communication.(wireshark)
	3.DLL Hijacking.(DLL Hijacker)
	4.insecure password management.
	5.error handling.
	7.Security misconfiguration.
	8.sensitive data in memory dump.(Tast manager create dump file)
	9.malicious file uploads.

3.Reverse engineering:

	decompining .exe or think client and reviewing code.

4.Automated Security Audits:

	automatic tools.


TOOLS:

WIRESHARK.
CFF EXPLORER.
SYSINTERNAL SUITE--->TCPVIEW-->TO GET TO KNOW IP ADDRESS.
		 ---->PROCMON TO MONITOR FILES.

methods:

	1.for weak configuration: check all config files.

	2.CFF explorer tool to get information about any exe file or thick client application.

	3.check for unencrypted communucation using wireshark.

	4.echo merage tool to check encrypted communication traffic.

	5.for sensitive info in memory dump or ram ->login to thick client or perform any sensitive info update->open tast manager->right click on thick client application select create dump file->check temp folder by %temp% we get thick.dmp->open dmp file in winhex tool and check your username and password or updated sensitve info.

	6.dnspy tool for .net reverse engineering tool open your thick client application and review code.

	7.DLL hijacker tool to check application is vulnerable to dll hijacking vuln.

 	8.perform injections,insecure password management,error handling,Security misconfiguration.




Traffic monitoring:

wireshark: only for monitoring.
echo merage: only outdated.
mitm-relay-with-burpsuite:  python 2.7.16


mitmrelay.py -l 0.0.0.0 -r tcp:ip:21 -p 127.0.0.1:8080


1.data storage issues:

	a.hard coded credentials: developer may strong some sensitive info in thick client.->use string give input file and save output somewhere analyze the file for sensitive info or use dnspy and view any hardcoded info we get.
	b.sensitive data in registry:  preform privilage esculation using regshot.
	c.obtain connection string from memory. process hacker.

2.sqlinjection:

	a.try login bypass payloads.

3.side chennal leaks:

dvta.exe >>store output in any file ex: c:/desktop/..

4.DLL hijacking:

